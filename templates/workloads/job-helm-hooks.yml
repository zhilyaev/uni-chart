{{- if .Values.hooks -}}

{{- $general := $.Values.hooksGeneral -}}
{{- /* Fix: int=0 */ -}}
{{- range $key, $val := $general }}
    {{- if kindIs "float64" $val }}
    {{- $_ := set $general $key ($val | toString) -}}
    {{- end -}}
{{- end -}}

{{- /* Check type if is string */ -}}
{{- $hooks := list -}}
{{- if kindIs "string" .Values.hooks -}}
  {{- $hooks = fromYaml .Values.hooks -}}
{{- else if kindIs "map" .Values.hooks -}}
  {{- $hooks = .Values.hooks -}}
{{- end -}}

{{- range $name, $hook := $hooks }}
{{- if ne (.enabled | toString) "false" }}
{{- /* Fix: int=0 */ -}}
{{- range $key, $val := $hook }}
    {{- if kindIs "float64" $val -}}
    {{- $_ := set $hook $key ($val | toString) -}}
    {{- end -}}
{{- end -}}
{{- $merged := mergeOverwrite dict $general . }}
{{- with $merged }}
---
apiVersion: batch/v1
kind: Job
{{/* TODO: obj.metadata */}}
metadata:
  name: {{ include "helpers.app.fullname" (dict "name" $name "context" $) }}
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    {{- include "helpers.obj.labels" (dict "value" . "context" $) | nindent 4 }}
  annotations:
    "helm.sh/hook": {{ .kind | default "pre-install,pre-upgrade" | quote }}
    "helm.sh/hook-weight": {{ .weight | default "5" | quote }}
    "helm.sh/hook-delete-policy": {{ .deletePolicy | default "before-hook-creation" | quote }}
    {{- with $.Values.annotations }}{{- include "helpers.tpl" (dict "value" . "context" $) | nindent 4 }}{{- end }}
    {{- with .annotations }}{{- include "helpers.tpl" (dict "value" . "context" $) | nindent 4 }}{{- end }}
spec:
  {{- include "helpers.job" (dict "value" . "name" $name "context" $) | indent 2 }}
{{- end -}}
{{- end -}}
{{- end -}}
{{- end -}}
